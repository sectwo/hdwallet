// // //////////////
// package main

// import (
// 	"bytes"
// 	"encoding/json"
// 	"io/ioutil"
// 	"net/http"

// 	"golang.org/x/exp/errors/fmt"
// )

// type MsgKind int

// const (
// 	MsgResult       MsgKind = iota // 결과 메시지
// 	MsgRegister                    // UR/SE 등록
// 	MsgDelete                      // UR/SE 제거
// 	MsgModifyInfo                  // UR/SE 정보 수정
// 	MsgModifyStatus                // UR/SE 상태 변경
// 	MsgCommit                      // UR/SE 커밋(적용)
// 	MsgRegisterList                // 등록된 UR/SE 목록
// 	MsgCommitList                  // 커밋된 UR/SE 목록
// 	MsgModifyList                  // 수정된 UR/SE 목록
// 	MsgHistory                     // 전체 이력 조회
// 	MsgHistoryInfo                 // 전체 이력 상세정보 조회
// )

// type Message struct {
// 	Kind    MsgKind `json:"kind"`
// 	Payload []byte  `json:"payload"`
// }

// type ReqMsgRegistration struct {
// 	UserId         string `json:"userId"`
// 	Type           string `json:"type"` // UR/SE
// 	Name           string `json:"name"`
// 	Address        string `json:"address"`
// 	RegistryURI    string `json:"registryUri,omitempty"`
// 	RegistryMethod string `json:"registryMethod,omitempty"`
// 	RevokeURI      string `json:"revokeUri,omitempty"`
// 	RevokeMethod   string `json:"revokeMethod,omitempty"`
// 	RequestURI     string `json:"requestUri"`
// 	RequestMethod  string `json:"requestMethod"`
// 	ReferURI       string `json:"referUri,omitempty"`
// 	ReferMethod    string `json:"referMethod,omitempty"`
// }

// type ReqMsgDelete struct {
// 	UserId  string `json:"userId"`
// 	Name    string `json:"name"`
// 	Address string `json:"address"`
// 	Status  int    `json:"status"`
// }

// type ReqMsgModify struct {
// 	UserId         string `json:"userId"`
// 	CurrentName    string `json:"currentName"`
// 	CurrentAddr    string `json:"currentAddr"`
// 	Type           string `json:"type,omitempty"` // UR/SE
// 	Name           string `json:"name,omitempty"`
// 	Address        string `json:"address,omitempty"`
// 	RegistryURI    string `json:"registryUri,omitempty"`
// 	RegistryMethod string `json:"registryMethod,omitempty"`
// 	RevokeURI      string `json:"revokeUri,omitempty"`
// 	RevokeMethod   string `json:"revokeMethod,omitempty"`
// 	RequestURI     string `json:"requestUri,omitempty"`
// 	RequestMethod  string `json:"requestMethod,omitempty"`
// 	ReferURI       string `json:"referUri,omitempty"`
// 	ReferMethod    string `json:"referMethod,omitempty"`
// 	Status         int    `json:"status,omitempty"`
// 	StatusFlag     int    `json:"statusFlag,omitempty"`
// }

// type ReqMsgCommit struct {
// 	UserId      string       `json:"userId"`
// 	CurrentName string       `json:"currentName"`
// 	CurrentAddr string       `json:"currentAddr"`
// 	Action      string       `json:"action"`
// 	Info        ReqMsgModify `json:"info,omitempty"`
// }

// func main() {
// 	listAllMsg := "reqListAll"

// 	regMsg := ReqMsgRegistration{
// 		UserId:  "ISAAC",
// 		Type:    "SE",
// 		Name:    "Service3",
// 		Address: "192.168.20.123:5557",
// 		// RegistryURI: ,
// 		// RegistryMethod: ,
// 		// RevokeURI: ,
// 		// RevokeMethod: ,
// 		// ReferURI: ,
// 		// ReferMethod: ,
// 		RequestURI:    "/service3",
// 		RequestMethod: "POST",
// 	}

// 	deleteMsg := ReqMsgDelete{
// 		UserId:  "ISAAC",
// 		Name:    "Service3",
// 		Address: "192.168.20.123:5557",
// 		Status:  3,
// 	}

// 	modInfoMsg := ReqMsgModify{
// 		UserId:      "ISAAC",
// 		CurrentName: "Service2",
// 		CurrentAddr: "192.168.20.123:5556",
// 		Type:        "SE",
// 		Name:        "Service",
// 		Address:     "192.168.20.123:5001",
// 		// RegistryURI: ,
// 		// RegistryMethod: ,
// 		// RevokeURI: ,
// 		// RevokeMethod: ,
// 		// ReferURI: ,
// 		// ReferMethod: ,
// 		RequestURI:    "/service",
// 		RequestMethod: "POST",
// 	}

// 	modStatusMsg := ReqMsgModify{
// 		UserId:      "ISAAC",
// 		CurrentName: "Service",
// 		CurrentAddr: "192.168.20.123:5001",
// 		Type:        "SE",
// 		StatusFlag:  2,
// 	}

// 	commitMsg := ReqMsgCommit{
// 		UserId:      "ISAAC",
// 		CurrentName: "Service",
// 		CurrentAddr: "192.168.20.123:5001",
// 		Action:      "Activated",
// 	}

// 	fmt.Println(listAllMsg, regMsg, deleteMsg, modInfoMsg, modStatusMsg, commitMsg)

// 	//TestListAll(listAllMsg)
// 	//TestListHistory(listAllMsg)
// 	TestRegService(regMsg)
// 	//TestListHistory(listAllMsg)
// 	//TestModifyInfo(modInfoMsg)
// 	//TestModifyStatus(modStatusMsg)
// 	//TestCommit(commitMsg)
// 	//TestDelService(MsgDelete, deleteMsg)
// }

// func createJosn(i interface{}) []byte {
// 	b, _ := json.Marshal(i)
// 	return b
// }

// func TestListAll(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    MsgRegisterList,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))

// }

// func TestListHistory(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    MsgHistory,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))

// }

// func TestRegService(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    1,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))
// }

// func TestDelService(kind MsgKind, reqMsg interface{}) {
// 	fmt.Println("TEST Delete API for HUR Management")
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    kind,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))
// }

// func TestModifyInfo(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    MsgModifyInfo,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))
// }

// func TestModifyStatus(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    MsgModifyStatus,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))
// }

// func TestCommit(reqMsg interface{}) {
// 	jByteMsg := createJosn(reqMsg)
// 	msg := &Message{
// 		Kind:    MsgCommit,
// 		Payload: jByteMsg,
// 	}
// 	j := createJosn(msg)

// 	request, err := http.NewRequest("POST", "http://192.168.20.128:9800/manage", bytes.NewBuffer(j))
// 	request.Header.Set("Content-Type", "application/json; charset=UTF-8")
// 	if err != nil {
// 		fmt.Println(err.Error())
// 	}

// 	client := &http.Client{}
// 	response, error := client.Do(request)
// 	if error != nil {
// 		panic(error)
// 	}
// 	defer response.Body.Close()
// 	body, _ := ioutil.ReadAll(response.Body)

// 	var respMessage Message
// 	json.Unmarshal(body, &respMessage)
// 	fmt.Println("JSON Response Message(Kind) : ", respMessage.Kind)
// 	fmt.Println("JSON Response Message(Payload) : ", string(respMessage.Payload))
// }
